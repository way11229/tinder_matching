{
  "swagger": "2.0",
  "info": {
    "title": "Tinder Matching Service API",
    "version": "1.0",
    "contact": {
      "name": "Way",
      "email": "way11229@gmail.com"
    }
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "host": "localhost:8080",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "add single user and list matches",
        "description": "Add a new user to the matching system and find any possible matches for the new user.",
        "operationId": "UserService_CreateUserAndListMatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserAndListMatchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreateUserAndListMatchesRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{userId}": {
      "delete": {
        "summary": "remove single user",
        "description": "Remove a user from the matching system so that the user cannot be matched anymore.",
        "operationId": "UserService_DeleteUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/users/{userId}/matches": {
      "get": {
        "summary": "list matches of the user",
        "description": "Find the most N possible matched single people, where N is a request parameter.",
        "operationId": "UserService_ListMatchesById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListMatchesByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "search limit, default 10",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userCreateUserAndListMatchesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "user name"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "user height"
        },
        "gender": {
          "$ref": "#/definitions/userUserGender",
          "description": "user gender"
        },
        "numberOfWantedDates": {
          "type": "integer",
          "format": "int64",
          "description": "nubmer of wanted dates"
        }
      },
      "required": [
        "name",
        "height",
        "gender",
        "numberOfWantedDates"
      ]
    },
    "userCreateUserAndListMatchesResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "new user id"
        },
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userUser"
          },
          "description": "matches of the new user"
        }
      }
    },
    "userListMatchesByIdResponse": {
      "type": "object",
      "properties": {
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userUser"
          },
          "description": "matches of the user"
        }
      }
    },
    "userUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "user id"
        },
        "name": {
          "type": "string",
          "description": "user name"
        },
        "height": {
          "type": "integer",
          "format": "int64",
          "description": "user height"
        },
        "gender": {
          "$ref": "#/definitions/userUserGender",
          "description": "user gender"
        },
        "remainNumberOfDates": {
          "type": "integer",
          "format": "int64",
          "description": "remain number of dates"
        }
      }
    },
    "userUserGender": {
      "type": "string",
      "enum": [
        "USER_GENDER_MALE",
        "USER_GENDER_FEMALE"
      ],
      "default": "USER_GENDER_MALE"
    }
  }
}
